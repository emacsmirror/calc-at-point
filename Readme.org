* Usage
Bind any interactive function under the ~calc-at-point-~ namespace you want to use. If you run them while selecting text, that operation will be applied to all numbers inside that selection. To repeat last calculation performed, run ~calc-at-point-calculation-repeat~ or just press return while having a empty calculation prompt open. To use a proper calculator instead of just addition or just division, etc run ~calc-at-point-quick-calc~.

* Comparison
** operate-on-number
[[https://github.com/knu/operate-on-number.el][operate-on-number]] has a lot of similar features to calc-at-point

Pros:
- Works on binary, hexadecimal, etc unlike this package which only works on base 10 unless you customize it

Cons:
- Is more complex and harder to define your own operators
- Doesn't work over regions
- Can't repeat last calculation

** macro-math
[[https://github.com/nschum/macro-math.el][macro-math]] is very complementary to this package as it allows you to write out the calculation in buffer and then run it, check it out.

* Rectangle selection
Currently this package doesn't work with the default Emacs rectangle selection. However you can make it work in ~evil-mode~ easily by defining a new operator like this:
#+BEGIN_SRC emacs-lisp
(evil-define-operator my/calc-at-point-add-1 (beg end type)
  (interactive "<R>")
  (calc-at-point-add-1 beg end))
#+END_SRC
Running this new function while in ~visual-block~ state (or really any other) should now work fine
